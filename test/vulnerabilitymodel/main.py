# -*- coding: utf-8 -*-
"""
Created on Thu Apr  4 11:17:51 2024

@author: Moayad
"""

#%% Load Dependencies

import pandas as pd
import numpy as np

#%% Load the Table

bldgClass = 'CR'
bldgOccupancy = 'Res'
region = 'Region 1'

table = pd.read_excel('C:/Users/Moayad/Documents/GitHub/stickModel/metadata/costs.xlsx', sheet_name = bldgClass)


#%% Create Sub-Elements of DataFrame

### Item ID
itemID = [i+1 for i in range(len(table))]

### Component ID
componentID = [i for i in table.Components]

### Engineering Demand Parameter
edp = [i for i in table['Engineering Demand Parameter']]

### Component Type
componentType = ['NS']*len(table)

### Component Group
componentGroup = [i for i in table['Performance Group']]

### Component Quantity
if bldgOccupancy == 'Res':
    componentQuantity = [i for i in table['RESIDENTIAL - METRIC']]
elif bldgOccupancy == 'Com':
    componentQuantity = [i for i in table['COMMERCIAL - METRIC']]
elif bldgOccupancy == 'Ind':
    componentQuantity = [i for i in table['INDUSTRIAL - METRIC']]
    
### Component Units
componentUnits = [i for i in table['Quantity unit']]

### Damage States
damageStates = [i for i in table['Damage States']]

### Fetch remaining columns (fragilities and costs)
for i, labels in enumerate(table.columns[10:]):
    vars()[f'{labels}'] = table[table.columns[10+i]].tolist()
    
### Build the dataFrame
dataFrame = {'ITEM'         : itemID,
             'ID'           : componentID,
             'EDP'          : edp,
             'Component'    : componentType,
             'Group'        : componentGroup,
             'Quantity'     : componentQuantity,
             'Units'        : componentUnits,
             'Damage States': damageStates}
for i, labels in enumerate(table.columns[10:]):
    dataFrame[labels] = vars()[f'{labels}']

#%% Change The Prices according to Porter et al. 2014
# (Guidelines for component-based analytical vulnerability assessment of buildings and nonstructural) GEM Technical Report elements )

region_1 = {'r_lab': 3.009,   # Ratio of hourly cost for North American/Oceanian construction labor to the hourly cost for US construction labor
            'f_lab1': 0.9,    # For efforts requiring repairing but not replacing architectural and structural components, mechanical, electrical, or plumbing equipment
            'f_lab2': 0.5,    # For efforts requiring replacing architectural and structural components
            'f_lab3': 0.1}    # For efforts requiring replacing mechanical, electrical, and plumbing equipment

region_2 = {'r_lab': 2.275,   # Ratio of hourly cost for European construction labor to the hourly cost for US construction labor
            'f_lab1': 0.9,    # For efforts requiring repairing but not replacing architectural and structural components, mechanical, electrical, or plumbing equipment
            'f_lab2': 0.5,    # For efforts requiring replacing architectural and structural components
            'f_lab3': 0.1}    # For efforts requiring replacing mechanical, electrical, and plumbing equipment

region_3 = {'r_lab': 0.353,   # Ratio of hourly cost for South American construction labor to the hourly cost for US construction labor
            'f_lab1': 0.9,    # For efforts requiring repairing but not replacing architectural and structural components, mechanical, electrical, or plumbing equipment
            'f_lab2': 0.5,    # For efforts requiring replacing architectural and structural components
            'f_lab3': 0.1}    # For efforts requiring replacing mechanical, electrical, and plumbing equipment

region_4 = {'r_lab': 0.470,   # Ratio of hourly cost for Asian and Middle-Eastern construction labor to the hourly cost for US construction labor
            'f_lab1': 0.9,    # For efforts requiring repairing but not replacing architectural and structural components, mechanical, electrical, or plumbing equipment
            'f_lab2': 0.5,    # For efforts requiring replacing architectural and structural components
            'f_lab3': 0.1}    # For efforts requiring replacing mechanical, electrical, and plumbing equipment

region_5 = {'r_lab': 0.381,   # Ratio of hourly cost for African construction labor to the hourly cost for US construction labor
            'f_lab1': 0.9,    # For efforts requiring repairing but not replacing architectural and structural components, mechanical, electrical, or plumbing equipment
            'f_lab2': 0.5,    # For efforts requiring replacing architectural and structural components
            'f_lab3': 0.1}    # For efforts requiring replacing mechanical, electrical, and plumbing equipment

costMultipliers = {'Region 1': region_1,
                   'Region 2': region_2,
                   'Region 3': region_3,
                   'Region 4': region_4,
                   'Region 5': region_5}

if region == 'Region 1' or 'region 1':
    
    # Components requiring replacing architectural and structural components
    indexA = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 51, 52]
    
    # Multiply the cost of these components by f_lab2
    
    # Components requiring replacing mechanical, electrical and plumbing equipment
    indexB = [int(i) for i in list(np.linspace(0,52,53))]
    indexB = [x for x in indexB if x not in indexA]
    
    # Multiply the cost of these components by f_lab3
    
    
    
    
